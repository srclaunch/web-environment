import { Project } from '../../project';
import { Application } from '../index';
import { Pipeline } from './index';
export declare enum PipelineWorkflowStatus {
    Canceled = "Canceled",
    Completed = "Completed",
    Failed = "Failed",
    Running = "Running",
    Queued = "Queued",
    Waiting = "Waiting"
}
export declare enum PipelineStepStatus {
    Canceled = "Canceled",
    Completed = "Completed",
    Failed = "Failed",
    Running = "Running",
    Queued = "Queued",
    Waiting = "Waiting"
}
export declare type PipelineStepOutputLine = {
    id: string;
    text: string;
    PipelineStepOutputId: PipelineStepOutput['id'];
};
export declare type PipelineStepOutput = {
    id: string;
    PipeWorkflowStepId: PipelineWorkflowStep['id'];
};
export declare type PipelineWorkflowStep = {
    enabled: boolean;
    id: string;
    status: PipelineStepStatus;
    PipeWorkflowId: PipelineWorkflow['id'];
};
export declare type PipelineWorkflow = {
    description: string;
    enabled: boolean;
    id: string;
    name: string;
    ActivePipelineId: Pipeline['id'];
    ApplicationId: Application['id'];
    ProjectId: Project['id'];
};
//# sourceMappingURL=workflow.d.ts.map